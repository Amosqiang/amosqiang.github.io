# .github/workflows/sync_to_x.yml
name: Sync Blog Posts to X

permissions:
  actions: read    
  contents: write 

on:
  workflow_dispatch: 
  workflow_run:
    workflows: ["pages-build-deployment"] 
    types: [completed]

jobs:
  sync:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} 
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.9'
      STATE_FILE_PATH: './last_post_guid.txt' 
      RSS_FEED_URL: 'https://amosqiang.github.io/feed.xml'
      COMMIT_USER_NAME: 'github-actions[bot]'
      COMMIT_USER_EMAIL: 'github-actions[bot]@users.noreply.github.com'
      COMMIT_MESSAGE: 'chore: Update last tweeted post GUID'
      
      # --- 新增/修改的配置 ---
      # 在这里设置需要筛选的标签 (大小写不敏感)
      REQUIRED_TAG: "X" 
      # 在这里设置推文的格式模板
      # 可用占位符: {title} 代表文章标题, {link} 代表文章链接
      # 示例: 
      # TWEET_FORMAT: "新博客文章：{title} {link}"
      # TWEET_FORMAT: "{title} {link} #Jekyll #Blog" 
      TWEET_FORMAT: "{title} {link}" # 当前设置：仅标题 + 链接
      # --- ---

    steps:
      # 步骤 1: 签出代码库
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 设置 Python 环境
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip' 

      # 步骤 3: 安装依赖库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      # 步骤 4: (可选) 等待 Feed 更新
      - name: Wait for feed propagation (optional)
        run: sleep 60s # 保持 60 秒等待

      # 步骤 5: 运行同步脚本 (脚本现在会读取上面 env 中的配置)
      - name: Run sync script
        id: sync_script 
        env:
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_SECRET: ${{ secrets.X_API_SECRET }}
          X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
          X_ACCESS_TOKEN_SECRET: ${{ secrets.X_ACCESS_TOKEN_SECRET }}
          # 将 YAML env 变量传递给脚本环境
          RSS_FEED_URL: ${{ env.RSS_FEED_URL }}
          STATE_FILE_PATH: ${{ env.STATE_FILE_PATH }}
          REQUIRED_TAG: ${{ env.REQUIRED_TAG }} 
          TWEET_FORMAT: ${{ env.TWEET_FORMAT }}
        run: python sync_to_x.py 

      # 步骤 6: 提交并推送状态文件 (如果更改)
      - name: Configure Git User
        run: |
          git config user.name "${{ env.COMMIT_USER_NAME }}"
          git config user.email "${{ env.COMMIT_USER_EMAIL }}"
          
      - name: Add state file to staging
        run: git add ${{ env.STATE_FILE_PATH }} || echo "State file not added."

      - name: Commit and push state file (if changed)
        run: |
          if git diff --staged --quiet; then
            echo "No changes detected in state file to commit."
          else
            echo "State file changed. Attempting to commit and push..."
            git commit -m "${{ env.COMMIT_MESSAGE }}"
            git push origin main || (sleep 5 && git pull origin main --rebase && git push origin main) || (sleep 10 && git pull origin main --rebase && git push origin main)
            echo "State file changes committed and pushed."
          fi